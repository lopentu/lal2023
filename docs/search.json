[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "LING5503 語言的邏輯分析",
    "section": "",
    "text": "Room: 綜 603 (部分內容剪輯上線)\nOffice hours: By appointment\nEmail: shukaihsieh@ntu.edu.tw\nTime: 14:20-17:10, Wed.\n\n\n\n\nNTU COOL：指定教材、作業繳交\n課程網站"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "關於",
    "section": "",
    "text": "這門課不預設任何語言相關的知識，只要喜歡邊玩遊戲邊動腦，就很適合。\n語言的邏輯分析，是希望透過以語言素材做出的謎題，來練習語言分析、邏輯思維與瞭解世界語言文化的多樣性。同時也能夠學會一些語言謎題遊戲的設計與應用。\n\n參考書籍\n對於喜歡主動學習，吸收新知的同學，以下是妳會喜歡的書。\n\nThe language lover’s puzzle book\n\n\n\n\nbellos\n\n\nhttp://www.alexbellos.com/language\n\nPuzzles in Logic, Languages and Computation\n\n \n\n\n\n\n\n\nThe Red/Green book, 2013. ntu lib online available\n\n\n\n\nThis book presents 56 problems, with solutions, created for high school students competing in a computational linguistics olympiad. … The interesting, elegant, and very diverse problems are fun to read and solve, and may be enjoyed not only by high school students, but also by current, future, or potential system thinkers, including programmers, analysts, or linguists.” (H. I. Kilov, Computing Reviews, April, 2014)\n\n\n\n\nWhat makes us smart: the computational logic of human cognition\n\n\n\n\n\n\n\n\nntu library, downloadable till 3/31\n\n\n\n\n\n\n\n語言學：結構、認知與文化的探索 （黃宣範主編,2022)\n南島語言 （中研院語言所研究員翻譯, 2022）\n\n\n\n參考資源\n\nUKLO\nNACLO\nOnlineling\nTOL 自己國家自己挺"
  },
  {
    "objectID": "session1-get-started.html",
    "href": "session1-get-started.html",
    "title": "1: 暖身練習",
    "section": "",
    "text": "自然語言\n\n\n\n人造語言"
  },
  {
    "objectID": "session1-get-started.html#how-do-i-write-code",
    "href": "session1-get-started.html#how-do-i-write-code",
    "title": "1: 暖身練習",
    "section": "How do I write code?",
    "text": "How do I write code?"
  },
  {
    "objectID": "session1-get-started.html#installing-dependencies-in-a-project-environment",
    "href": "session1-get-started.html#installing-dependencies-in-a-project-environment",
    "title": "1: 暖身練習",
    "section": "Installing dependencies in a project environment",
    "text": "Installing dependencies in a project environment\nThere are two alternatives:\n\nUsing an existing project with dependencies already in Project.toml (this will be the case when you are collaborating with someone that already set up the project dependencies)\nSet up the dependencies for your project on your own (this will be the case if your project is new)\n\nFor this workshop, participants will use the workshop GitHub repository as the existing project that already has all the dependencies. However, we also show the steps below to create a new project from scratch.\n\n1. Working on an existing project environment\nGit clone the repository:\ngit clone https://github.com/crsl4/julia-workshop.git\nOpen julia and activate the package with:\njulia --project\nAlternatively, you can open julia normally, and type ] activate .\nThen, instantiate the package (install dependencies) in the package mode ]:\n(julia-workshop) pkg> instantiate\n(julia-workshop) pkg> update\nNow, you should be able to follow along the workshop commands. Trouble-shooting might be needed when we reach the interoperability with Python and R as certain libraries or packages might need to be installed too.\n\n\n2. Creating a new project environment\nCreate a folder in the terminal:\nmkdir myProject\ncd myProject\nOpen Julia inside your folder, and activate your environment with:\n(@v1.8) pkg> activate .\nInstall the packages that we need. For example, the packages needed for today’s workshop are:\njulia> ENV[\"PYTHON\"] = \"\"\n(myproject) pkg> add PyCall\n(myproject) pkg> add IJulia\n(myproject) pkg> build IJulia\n(myproject) pkg> add MixedModels\n(myproject) pkg> add RCall\n(myproject) pkg> add Arrow\n(myproject) pkg> add DataFrames\n(myproject) pkg> add Tables\n(myproject) pkg> add RangeTrees\nNote: This will create a whole new conda environment, so it will take up space in memory.\nTwo files are noteworthy:\n\nProject.toml: Defines project\nManifest.toml: Contains exact list of project dependencies\n\nshell> head Project.toml\n[deps]\nArrow = \"69666777-d1a9-59fb-9406-91d4454c9d45\"\nDataFrames = \"a93c6f00-e57d-5684-b7b6-d8193f3e46c0\"\nIJulia = \"7073ff75-c697-5162-941a-fcdaad2a7d2a\"\nMixedModels = \"ff71e718-51f3-5ec2-a782-8ffcbfa3c316\"\nPyCall = \"438e738f-606a-5dbb-bf0a-cddfbfd45ab0\"\nRCall = \"6f49c342-dc21-5d91-9882-a32aef131414\"\nTables = \"bd369af6-aec1-5ad0-b16a-f7cc5008161c\"\n\n\nshell> head Manifest.toml\n# This file is machine-generated - editing it directly is not advised\n\njulia_version = \"1.8.0-beta3\"\nmanifest_format = \"2.0\"\nproject_hash = \"01baf737705b090869a607b779c699f83bbeb154\"\n\n[[deps.ArgTools]]\nuuid = \"0dad84c5-d112-42e6-8d28-ef12dabb789f\"\nversion = \"1.1.1\"\nLook at your Project.toml and Manifest.toml files after installation. They have all the necessary information about your session.\nThe packages have a uuid string which is the universally unique identifier.\nMore on the Project.toml and Manifest.toml files here."
  },
  {
    "objectID": "session1-get-started.html#easily-share-with-collaborators",
    "href": "session1-get-started.html#easily-share-with-collaborators",
    "title": "1: 暖身練習",
    "section": "Easily share with collaborators",
    "text": "Easily share with collaborators\nShare your project to colleagues. Send your entire project folder to your colleague, and all they need to do is:\njulia> cd(\"path/to/project\")\npkg> activate .\npkg> instantiate\nAll required packages and dependencies will be installed. Scripts that run in your computer will also run in their computer."
  }
]